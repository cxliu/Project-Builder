#-*-makefile-*-

BASE=../../../../

ifndef ARM_LINUX_CONFIG_FILE
$(error "$${ARM_LINUX_CONFIG_FILE} is not defined. The file generated by 'armcc --arm_linux_configure'")
endif
CCDEP_debug = armcc
CCDEP_release = armcc
CC_debug = armcc
CC_release = armcc
CFLAGS_debug = --cpu=Cortex-A9.no_neon --fpu=VFPv3_D16 --thumb -g -O0 --apcs=/interwork -c --c99 --arm_linux_paths --arm_linux_config_file=$(ARM_LINUX_CONFIG_FILE)
CFLAGS_release = --cpu=Cortex-A9.no_neon --fpu=VFPv3_D16 --thumb -O3 -Otime --apcs=/interwork -c --c99 --arm_linux_paths --arm_linux_config_file=$(ARM_LINUX_CONFIG_FILE)
DEFINES_debug = -D_ffix_r=__builtin_lrintf
DEFINES_release = -DNDEBUG=1 -D_ffix_r=__builtin_lrintf
INCLUDES_debug = -I$(BASE)example-1/include -I$(BASE).
INCLUDES_release = -I$(BASE)example-1/include -I$(BASE).
LDFLAGS_debug = --cpp -L--cpu=Cortex-A9.no_neon -L--fpu=VFPv3_D16 --arm_linux_paths --arm_linux_config_file=$(ARM_LINUX_CONFIG_FILE)
LDFLAGS_release = --cpp -L--cpu=Cortex-A9.no_neon -L--fpu=VFPv3_D16 --arm_linux_paths --arm_linux_config_file=$(ARM_LINUX_CONFIG_FILE)
LD_debug = armcc
LD_release = armcc

COMMON_FILES = $(BASE)example-1/frontend/main $(BASE)example-1/src/helloworld

INPUTS_COMMON_LINK_debug = $(addsuffix .helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_debug.o,$(COMMON_FILES))
INPUTS_COMMON_LINK_release = $(addsuffix .helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_release.o,$(COMMON_FILES))


default: helloworld_as_one_project_debug helloworld_as_one_project_release

helloworld_as_one_project_debug: $(INPUTS_COMMON_LINK_debug)
	$(LD_debug) $(LDFLAGS_debug) -o $@ $+ 

helloworld_as_one_project_release: $(INPUTS_COMMON_LINK_release)
	$(LD_release) $(LDFLAGS_release) -o $@ $+ 

%.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_debug.o: %.c
	$(CCDEP_debug) --cpu=Cortex-A9.no_neon --mm $(DEFINES_debug) $(INCLUDES_debug) -o $@ > $*.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_debug.d $<
	$(CC_debug) $(CFLAGS_debug) $(DEFINES_debug) $(INCLUDES_debug) -o $@ $<

%.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_release.o: %.c
	$(CCDEP_release) --cpu=Cortex-A9.no_neon --mm $(DEFINES_release) $(INCLUDES_release) -o $@ > $*.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_release.d $<
	$(CC_release) $(CFLAGS_release) $(DEFINES_release) $(INCLUDES_release) -o $@ $<

CLEAN_COMMON_COMPILE_debug = $(addsuffix .helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_debug.d,$(COMMON_FILES))
CLEAN_COMMON_COMPILE_release = $(addsuffix .helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_release.d,$(COMMON_FILES))

cleandeps:
	$(RM) $(CLEAN_COMMON_COMPILE_debug)
	$(RM) $(CLEAN_COMMON_COMPILE_release)

clean: cleanself

cleanself:
	$(RM) $(CLEAN_COMMON_COMPILE_debug)
	$(RM) $(CLEAN_COMMON_COMPILE_release)
	$(RM) $(INPUTS_COMMON_LINK_debug)
	$(RM) $(INPUTS_COMMON_LINK_release)
	$(RM) helloworld_as_one_project_debug
	$(RM) helloworld_as_one_project_release

.PHONY: default FORCE clean cleandeps cleanself help

FORCE:

help:
	@echo "This makefile has the following targets:"
	@echo " helloworld_as_one_project_debug"
	@echo " helloworld_as_one_project_release"
	@echo " default"
	@echo " clean"
	@echo " cleandeps"
	@echo " help"

include $(wildcard $(BASE)example-1/frontend/main.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_debug.d)
include $(wildcard $(BASE)example-1/src/helloworld.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_debug.d)
include $(wildcard $(BASE)example-1/frontend/main.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_release.d)
include $(wildcard $(BASE)example-1/src/helloworld.helloworld_as_one_project_linuxhf_cortex_a9_vfp_t2_rvct_cslibc_release.d)


